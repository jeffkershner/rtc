services:
  rtc-frontend:
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    volumes:
      - ./services/frontend:/app
      - /app/node_modules
      - /app/.next  
    environment:
      - NODE_ENV=development
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      rtc-postgres:
        condition: service_healthy

  rtc-nginx:
    build:
      context: ./services/nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      - rtc-frontend

  rtc-postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rtc_db
    ports:
      - "5432:5432"
    volumes:
      - ./services/postgres/data:/var/lib/postgresql/data
      - ./services/postgres/init:/docker-entrypoint-initdb.d
      - ./services/postgres/conf:/etc/postgresql/conf.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
